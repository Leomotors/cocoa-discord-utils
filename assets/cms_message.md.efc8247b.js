import{_ as s,c as n,o as a,a as o}from"./app.84f1b8de.js";const m=JSON.parse('{"title":"Message Command","description":"","frontmatter":{},"headers":[{"level":2,"title":"Message Center","slug":"message-center"}],"relativePath":"cms/message.md","lastUpdated":1656256056000}'),e={name:"cms/message.md"},p=o(`<h1 id="message-command" tabindex="-1">Message Command <a class="header-anchor" href="#message-command" aria-hidden="true">#</a></h1><p>To invoke a message command, user need to meets two criteria.</p><ul><li><p>Mention or Global Prefix</p></li><li><p>Command Name and Arguments</p></li></ul><p><em>Note: This is similar to <a href="http://discord.py" target="_blank" rel="noopener noreferrer">discord.py</a>&#39;s cogs</em></p><h2 id="message-center" tabindex="-1">Message Center <a class="header-anchor" href="#message-center" aria-hidden="true">#</a></h2><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> mcenter </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MessageCenter</span><span style="color:#A6ACCD;">(client</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">prefixes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">simp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><em>In this example, our bot will only listen to message with prefix simp</em></p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MainCog</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CogMessageClass</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// constructor omitted</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">MessageCommand</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// This can be omitted, the decorator will use \`name\` from function name</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// name: &quot;ping&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">aliases</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">description</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pong!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">ping</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Message</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> strp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reply</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pong!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>User can invoke <code>ping</code> command by sending <code>simpping</code> or <code>simping</code></p><p><code>strp</code> (Stripped Content) is <code>message.content</code> that removed prefix or mentions and command name</p><p><em>For example</em></p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// Command: play (using prefixes: [&quot;simp&quot;])</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">simpplay The Rumbling</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// strippedContent is equal to</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The Rumbling</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Command: submit (using mention: true)</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;@bot_id&gt; submit cancel_1112 \`\`\`py</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">import os; os.system(&#39;sudo reboot&#39;);\`\`\`</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// strippedContent is equal to</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cancel_1112 \`\`\`py</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">import os; os.system(&#39;sudo reboot&#39;);\`\`\`</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p><em><code>message.content</code> is remained unmodified, you can access full message there too</em></p>`,13),l=[p];function t(c,r,i,y,D,F){return a(),n("div",null,l)}var d=s(e,[["render",t]]);export{m as __pageData,d as default};
