import{_ as e,c as a,o as s,a as n}from"./app.f0406a77.js";const m=JSON.parse('{"title":"Other utility features","description":"","frontmatter":{},"headers":[{"level":2,"title":"Help Command","slug":"help-command"},{"level":2,"title":"Event Handler","slug":"event-handler"},{"level":2,"title":"PS","slug":"ps"},{"level":2,"title":"Advanced Feature: Specific-Guild Command","slug":"advanced-feature-specific-guild-command"},{"level":3,"title":"How does it works","slug":"how-does-it-works"}],"relativePath":"cms/other.md","lastUpdated":1658151684000}'),o={name:"cms/other.md"},l=n(`<h1 id="other-utility-features" tabindex="-1">Other utility features <a class="header-anchor" href="#other-utility-features" aria-hidden="true">#</a></h1><h2 id="help-command" tabindex="-1">Help Command <a class="header-anchor" href="#help-command" aria-hidden="true">#</a></h2><p>Both <code>MessageCenter</code> and <code>SlashCenter</code> is capable of generating help command, make sure to call them in right order.</p><p>The help command is named <code>help</code> in <code>Help</code> Cog, so beware not to create cog or command with the same name.</p><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">scenter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addCogs</span><span style="color:#A6ACCD;">( </span><span style="color:#676E95;font-style:italic;">/* all your cogs */</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// * Help Command, must be called after All Cogs are added</span></span>
<span class="line"><span style="color:#A6ACCD;">scenter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">useHelpCommand</span><span style="color:#A6ACCD;">(style)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// * BUT before Validate Commands</span></span>
<span class="line"><span style="color:#A6ACCD;">scenter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">validateCommands</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">scenter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* if you wanna set */</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// * REMINDER: syncCommands should be used in client.on(&quot;ready&quot;)</span></span>
<span class="line"></span></code></pre></div><h2 id="event-handler" tabindex="-1">Event Handler <a class="header-anchor" href="#event-handler" aria-hidden="true">#</a></h2><p><a href="./event.html">Event Handler for Management Center</a></p><h2 id="ps" tabindex="-1">PS <a class="header-anchor" href="#ps" aria-hidden="true">#</a></h2><p>See <a href="https://github.com/Leomotors/cocoa-grader" target="_blank" rel="noopener noreferrer">cocoa-grader</a> and <a href="https://github.com/CarelessDev/harunon.js" target="_blank" rel="noopener noreferrer">harunon.js</a></p><h2 id="advanced-feature-specific-guild-command" tabindex="-1">Advanced Feature: Specific-Guild Command <a class="header-anchor" href="#advanced-feature-specific-guild-command" aria-hidden="true">#</a></h2><p>You may want some specific commands to be available to specific guilds, this is where Specific-Guild Command is here.</p><p>First, when you create a Command Center, you will need to add Guild IDS to constructor arguments. This is default or base guild ids which will be used for every commands.</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SlashCenter</span><span style="color:#A6ACCD;">(client</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>For each command, you can override the guild ids it is targeting to, by adding field <code>guild_ids</code> for Object Cog, or <code>second argument</code> in Class Cog.</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// Instead of syncing to 1 and 2 (Default), sync to 1 and 3 instead</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">SlashCommand</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">AutoBuilder</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"></span></code></pre></div><p>The library will take care of unioning the guild ids, so you can think of them as <code>Default</code> and <code>Override</code></p><h3 id="how-does-it-works" tabindex="-1">How does it works <a class="header-anchor" href="#how-does-it-works" aria-hidden="true">#</a></h3><p>For Message Command, if this feature is enabled (by specifying guild_ids in constructor), the library will check if the message is created in the allowed guild and respond to it.</p><p>For Slash Command, the library will only sync the command to the guilds specified, it also do a cleanup in case you change the values.</p>`,19),t=[l];function r(p,c,d,i,h,y){return s(),a("div",null,t)}var C=e(o,[["render",r]]);export{m as __pageData,C as default};
